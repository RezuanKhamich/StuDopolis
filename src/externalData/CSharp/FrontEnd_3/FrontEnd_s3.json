{
    "update": "25.07.2021",
    "sectionName": "Основы JavaScript. Часть 3",

    "pageCount": 3,
    "pageType": ["", "Т", "П"],

    "freelanceTasks":[
        {
            "mainTitle": "Выбрать архитектуру для будущего интернет магазина",
            "description": "Текущая архитектура не подходит. Сайт сильно тормозит, необходимо найти подходящую схему ответив на ряд вопросов",
            "taskComplexity": 0,
            "award": [200, 400, 0],
            "pageTest": [
                {
                    "question": "Сколько типов данных в JS?",
                    "rightAnswerId": 3,
                    "answers": [ "5", "12", "8", "4"]
                },
                {
                    "question": "За что отвечает метод alert?",
                    "rightAnswerId": 1,
                    "answers": [ "Вывод сообщения", "Ввод данных", "Преобразование типов данных", "Очистка значения переменной"]
                },
                {
                    "question": "Какой тип данных отвечает за хранение логических значений?",
                    "rightAnswerId": 3,
                    "answers": [ "Object", "String", "Boolean", "Number"]
                }
            ]
        },
        {
            "mainTitle": "Требуется доработать окно вывода информации пользователю",
            "description": "Код работает неправильно, нужно ответить на ряд вопросов, которые помогут построить окно",
            "taskComplexity": 0,
            "award": [200, 400, 0],
            "pageTest": [
                {
                    "question": "Как преобразовать строку в число?",
                    "rightAnswerId": 2,
                    "answers": [ "Поставить после строки +", "Поставить перед строкой +", "Вызвать метод String", "Поставить перед строкой !"]
                },
                {
                    "question": "Как объявить константу?",
                    "rightAnswerId": 1,
                    "answers": [ "const", "stat", "var", "let"]
                },
                {
                    "question": "Какой метод позволит ввести пользователю данные в окне браузера?",
                    "rightAnswerId": 3,
                    "answers": [ "prot()", "prop()", "prompt()", "proct()"]
                },
                {
                    "question": "Какой тип данных не является примитивным?",
                    "rightAnswerId": 2,
                    "answers": [ "String", "Object", "Boolean", "Symbol"]
                },
                {
                    "question": "Как записывается тернарный оператор?",
                    "rightAnswerId": 1,
                    "answers": [ "num ? true : false", "num ?? true : false", "num || true : false", "num ?? true | false"]
                }
            ]
        }
    ],

    "pageFlow": {
        "page1": [
            {"pageSecondTitles": "Теория: Основы HTML", "num": 1},
            {"pageText": "Есть много методов вычисления отражённого освещения, два самых известных — это Global Illumination (GI) и Final Gather (FG). Их можно использовать по отдельности, но вместе они выдают особенно хороший результат. Однако за всё приходится платить: рендер, то есть процесс вычисления сложного освещения и последующей его визуализации, займёт уйму времени."},
            {"pageText": "Global Illumination (GI) представляет из себя наиболее “честный” способ симуляции отражённого света. Из источника света вылетают фотоны — частички, несущие информацию о цвете и яркости света. Ударяясь о какую-либо поверхность, они освещают её, но теряют часть энергии, вследствие чего их цвет и яркость изменяются. Затем фотоны отскакивают и ударяются о следующую поверхность, повторно теряя часть энергии. Так происходит несколько раз в зависимости от настроек рендерера."},
            {"pageSecondTitles": "Моделирование и анимация. Работа со звуко1", "num": 2},
            {"pageText": "Final Gather (FG) раскидывает по сцене точки, — final gather points, — из которых в разные стороны вылетают лучи. После столкновения с какой-либо поверхностью, лучи возвращают в родительскую точку информацию о цвете и его яркости. Представьте себе такую картину: вечер, солнце почти зашло за горизонт; становится темно, но небольшая часть комнаты ещё залита оранжевым закатным светом. Находящаяся на полу final gather point отправляет в разные стороны несколько лучей, некоторые из них дотягиваются до освещённой части комнаты и с этой информацией возвращаются в исходную точку, тем самым слегка освещая пол «отражённым» оранжевым светом. Это не такой “честный” способ, как GI, но он производит хороший результат, и им часто пользуются, чтобы заполнять сцены красивым мягким освещением."},
            {"pageCode": [
                "<div style='background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;'><pre style='margin: 0; line-height: 125%'><span style='color: #e6db74'>&quot;use strict&quot;</span><span style='color: #f8f8f2'>;</span>\n",
                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>arr</span> <span style='color: #f92672'>=</span> <span style='color: #f8f8f2'>[];</span>\n\n",

                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>getProto</span> <span style='color: #f92672'>=</span> <span style='color: #f8f8f2'>Object.</span><span style='color: #a6e22e'>getPrototypeOf</span><span style='color: #f8f8f2'>;</span>\n\n",

                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>slice</span> <span style='color: #f92672'>=</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>slice</span><span style='color: #f8f8f2'>;</span>\n",
                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>flat</span> <span style='color: #f92672'>=</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>flat</span> <span style='color: #f92672'>?</span> <span style='color: #66d9ef'>function</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>)</span> <span style='color: #f8f8f2'>{</span>\n",
                "   <span style='color: #66d9ef'>return</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>flat</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>call</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>);</span>\n",
                "<span style='color: #f8f8f2'>}</span> <span style='color: #f92672'>:</span> <span style='color: #66d9ef'>function</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>)</span> <span style='color: #f8f8f2'>{</span>\n",
                "   <span style='color: #66d9ef'>return</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>concat</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>apply</span><span style='color: #f8f8f2'>(</span> <span style='color: #f8f8f2'>[],</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>);</span>\n",
                "<span style='color: #f8f8f2'>};</span>\n'",
                "</pre></div>'"
            ]}
        ],
        "page2": [
            {"pageTest": [
                {
                    "question": "Какого цвета небо?",
                    "rightAnswerId": 2,
                    "answers": [ "Черный", "Синий", "Красный", "Зеленый"]
                },
                {
                    "question": "Что открыл Христофор Колумб?",
                    "rightAnswerId": 4,
                    "answers": [ "Европу", "Индию", "Японию", "Америку"]
                },
                {
                    "question": "Что тяжелее 1кг железа или 1кг ваты?",
                    "rightAnswerId": 3,
                    "answers": [ "1кг железа", "1кг ваты", "Одинаково"]
                }
            ]}
        ],
        "page3": [
            {"pageSecondTitles": "Теория", "num": 1},
            {"pageText": "Прочитать материал на сайте <a>https://html5book.ru/</a> главы 1.1 - 1.5 HTML - ссылки"},
            {"pageSecondTitles": "Практика", "num": 1},
            {"pageSecondTitles": "Основы HTML", "num": 1},
            {"pageText": "Создать html страницу с собственной биографией, навыками, хобби. Добавить ссылки на свои работы, соц сети или интересные книги/статьи/видео, которые тебе понравились или повлияли на твое становление (В идеале еще добавить картинки, фотографии, используя тег <img> из главы 1.6 + добавить немного css стилей)"},
            {"pageCode": [
                "<div style='background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;'><pre style='margin: 0; line-height: 125%'><span style='color: #e6db74'>&quot;use strict&quot;</span><span style='color: #f8f8f2'>;</span>\n",
                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>arr</span> <span style='color: #f92672'>=</span> <span style='color: #f8f8f2'>[];</span>\n\n",

                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>getProto</span> <span style='color: #f92672'>=</span> <span style='color: #f8f8f2'>Object.</span><span style='color: #a6e22e'>getPrototypeOf</span><span style='color: #f8f8f2'>;</span>\n\n",

                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>slice</span> <span style='color: #f92672'>=</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>slice</span><span style='color: #f8f8f2'>;</span>\n",
                "<span style='color: #66d9ef'>var</span> <span style='color: #a6e22e'>flat</span> <span style='color: #f92672'>=</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>flat</span> <span style='color: #f92672'>?</span> <span style='color: #66d9ef'>function</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>)</span> <span style='color: #f8f8f2'>{</span>\n",
                "   <span style='color: #66d9ef'>return</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>flat</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>call</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>);</span>\n",
                "<span style='color: #f8f8f2'>}</span> <span style='color: #f92672'>:</span> <span style='color: #66d9ef'>function</span><span style='color: #f8f8f2'>(</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>)</span> <span style='color: #f8f8f2'>{</span>\n",
                "   <span style='color: #66d9ef'>return</span> <span style='color: #a6e22e'>arr</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>concat</span><span style='color: #f8f8f2'>.</span><span style='color: #a6e22e'>apply</span><span style='color: #f8f8f2'>(</span> <span style='color: #f8f8f2'>[],</span> <span style='color: #a6e22e'>array</span> <span style='color: #f8f8f2'>);</span>\n",
                "<span style='color: #f8f8f2'>};</span>\n'",
                "</pre></div>'"
            ]}
        ]
    }
}